@model StockManager.Models.TailorChalanSend

@{
    ViewBag.Title = "Update Chalan";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section css{
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.12.4/css/bootstrap-select.min.css" rel="stylesheet" />
    <link rel="stylesheet" type="text/css" href="//cdn.jsdelivr.net/bootstrap.daterangepicker/2/daterangepicker.css" />
}
@using (Html.BeginForm())
{
    <div class="form-horizontal">
        <h4>Tailor Chalan</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="container">
            <div class="row">
                <div id="div1" class="col-md-6 col-xs-12">
                    <div class="form-group">
                        @Html.Label("Vendor", "VendorId", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-7">
                            @Html.DropDownList("VendorId", null, htmlAttributes: new { @class = "form-control col-md-7", @id = "Vendor" })
                            @Html.ValidationMessageFor(model => model.VendorId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div id="div2" class="col-md-6 col-xs-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.ChalanNo, "Chalan#", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.ChalanNo, new { htmlAttributes = new { @class = "form-control", @id = "ChalanNo" } })
                            @Html.ValidationMessageFor(model => model.ChalanNo, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div id="div2" class="col-md-6 col-xs-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.ChalanDate, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.ChalanDate, new { htmlAttributes = new { @class = "form-control col-md-7", Id = "ChalanDate", required = "true" } })
                            @Html.ValidationMessageFor(model => model.ChalanDate, "", new { @class = "text-danger ChalanDateVal" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div id="div1" class="col-md-6 col-xs-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.bill_number, "Bill Number", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-7">
                            @Html.EditorFor(model => model.bill_number, new { htmlAttributes = new { @class = "form-control", @id = "BillNo" } })
                            @Html.ValidationMessageFor(model => model.bill_number, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div id="div2" class="col-md-6 col-xs-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, "Description", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", @id = "Description" } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>


            <div class="row">
                <div id="div1" class="col-md-6 col-xs-12 mt">
                    <div class="form-group">
                        <div class="col-md-2">
                        </div>
                        <div class="col-xs-12 col-md-8">
                            <input id="btnShowModal" type="button" value="Add Product" class="btn btn-success" />
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div id="div1" class="col-md-12 col-xs-12">
                    <div class="form-group">
                        <table class="table table-striped table-advance table-hover" id="tailorChalanItems">
                            <tr id="productItemRow">
                                <td>
                                    <label class="productName">Product Name</label>
                                    <input type="hidden" class="productId" value="" />
                                    <input type="hidden" class="rowCount" value="" />
                                    
                                </td>
                                <td>
                                    <label class="productQuantity">Quantity</label>
                                </td>
                                
                                <td class="itemEditRow"></td>
                            </tr>
                            @if (Model != null && Model.TailorChalanSendDetails != null)
                            {
                                var count = 0;
                                foreach (var item in Model.TailorChalanSendDetails)
                                {
                                    count++;
                                    
                                    <tr>
                                        <td>
                                            <label class="productName">@item.Product.ProductName</label>
                                            <input type="hidden" class="productId" value="@item.ProductId" />
                                            <input type="hidden" class="rowCount" value="@count" />
                                            <input type="hidden" class="Id" value="@item.Id" />
                                        </td>
                                        <td>
                                            <label class="productQuantity">@item.Quantity</label>
                                        </td>
                                        
                                        <td class="itemEditRow">
                                            <button type="button" class="btn btn-warning btn-xs editItem" title="Edit"><i class="fa fa-pencil"></i></button>
                                            <button type="button" class="btn btn-danger btn-xs remove" title="Delete"><i class="fa fa-trash-o"></i></button>
                                        </td>
                                    </tr>
                                }
                            }
                        </table>
                    </div>
                </div>
            </div>

            <div class="row">
                <div id="div1" class="col-md-6 col-xs-12">
                    <div class="form-group">
                        <div class="col-md-2">
                        </div>
                        <div class="col-xs-12 col-md-8">
                            <input type="button" id="btnSubmit" class="btn btn-success" value="Save Tailor Chalan" />
                            @Html.ActionLink("Close", "Index", "tailorChalansend", new { @class = "btn btn-danger" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="modal fade" tabindex="-1" id="itemModel"
                 data-keyboard="false" data-backdrop="static">
                <div class="modal-dialog modal-lg">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal">
                                ×
                            </button>
                            <h4 class="modal-title">Add Product</h4>
                        </div>
                        <div class="modal-body">
                            <form>
                                <div class="form-group">
                                    @Html.Label("Product", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownList("ProductId", null, htmlAttributes: new { @class = "form-control", @id = "product" })
                                        @Html.ValidationMessage("ProductId", "", new { @class = "text-danger" })
                                        <input type="hidden" class="IdEdit" id="IdEdit" />
                                        <input type="hidden" class="countEdit" id="countEdit" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.Label("Quantity", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.Editor("Quantity", new { htmlAttributes = new { @class = "form-control", @id = "quantity" } })
                                        @Html.ValidationMessage("Quantity", "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                
                                
                            </form>
                        </div>
                        <div class="modal-footer">
                            <button id="addProductItem" type="button" class="btn btn-success">Add Product</button>
                            <button type="button" id="btnHideModal" class="btn btn-danger">
                                Close
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}



@section scripts
{
    <!-- DateRanger -->
    <script type="text/javascript" src="//cdn.jsdelivr.net/momentjs/latest/moment.min.js"></script>
    <script type="text/javascript" src="//cdn.jsdelivr.net/bootstrap.daterangepicker/2/daterangepicker.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            $('#ChalanDate').daterangepicker({
                locale: {
                    format: 'DD-MMM-YYYY'
                },
                "singleDatePicker": true,
                "startDate": "@(DateTime.Now.ToString("dd-MMM-yyyy"))",
                "minDate": "@ViewBag.StartYear",
                "maxDate": "@ViewBag.EndYear"
            });
            $("#btnShowModal").click(function () {
                $('#quantity').val('');
                $('#IdEdit').val('');
                $('#countEdit').val('');
                $("#itemModel").modal('show');
            });

            $("#btnHideModal").click(function () {
                $('#quantity').val('');
                $('#IdEdit').val('');
                $('#countEdit').val('');
                $("#itemModel").modal('hide');
            });



            $('#addProductItem').click(function () {
                //validation and add order items
                var isAllValid = true;

                if (isAllValid) {
                    if($('#countEdit').val() == '')
                    {
                        var $newRow = $('#productItemRow').clone().removeAttr('id');

                        $('.productId', $newRow).val($('#product').val());
                        $('.productName', $newRow).text($('#product').text());
                        $('.productQuantity', $newRow).text($('#quantity').val());
                        $('.rowCount', $newRow).val($('#tailorChalanItems tr').length);
                        $('.itemEditRow', $newRow).append('<button type="button" class="btn btn-success btn-xs remove" title="View Material Used"><i class="fa fa-edit"></i></button> | <button type="button" class="btn btn-danger btn-xs remove" title="Delete" ><i class="fa fa-trash-o"></i></button>');
                        //$('.itemEditRow', $newRow).append('<button type="button" class="btn btn-danger btn-xs remove" title="Delete" ><i class="fa fa-trash-o"></i></button>');
                        $('#tailorChalanItems').append($newRow);
                        $("#itemModel").modal('hide');
                    }
                    else
                    {
                        $('#printerChalanItems tbody tr').each(function (index, ele) {
                            //update product list
                            if($('.rowCount', this).val() == $('#countEdit').val())
                            {
                                $('.productId', this).val($('#product').val());
                                $('.productName', this).text($('#product').text());
                                $('.productQuantity', this).text($('#quantity').val());
                                $('.rowCount', this).val($('#tailorChalanItems tr').length);

                                $('#quantity').val('');
                                $('#IdEdit').val('');
                                $('#countEdit').val('');
                                $("#itemModel").modal('hide');
                            }
                        });
                    }
                }
            });


            $('#tailorChalanItems').on('click', '.editItem', function(){
                //show modelpopup with edit item
                $('#product').val($('.productId', $(this).parents('tr')).val());
                $('#quantity').val($('.productQuantity', $(this).parents('tr')).text());
                $('#IdEdit').val($('.Id', $(this).parents('tr')).val());
                $('#countEdit').val($('.rowCount', $(this).parents('tr')).val());
                $('#addProductItem').text("Update product");


                $("#itemModel").modal('show');
            });


            $('#btnSubmit').click(function () {
                var isAllValid = true;

                //validate order items
                var list = [];
                var errorItemCount = 0;
                $('#tailorChalanItems tbody tr').each(function (index, ele) {
                    if ($('.productId', this).val() != null && $('.productId', this).val() != "0" && $('.productId', this).val() != "") {
                        var orderItem = {
                            Id:$('.Id', this).val(),
                            ChalanId: @Model.Id,
                            ProductId: $('.productId', this).val(),
                            Quantity: $('.productQuantity', this).text()
                        }
                        list.push(orderItem);
                    }
                }
                );

                var data = {
                    Id:@Model.Id,
                    VendorId: $('#Vendor').val(),
                    ChalanDate: $('#ChalanDate').val(),
                    ChalanNo: $('#ChalanNo').val(),
                    CompanyId: @Model.CompanyId,
                    financial_year: @Model.financial_year,
                    created_by: @Model.created_by,
                    bill_number: $('#BillNo').val(),
                    Description: $('#Description').val(),
                    TailorChalanSendDetails: list,
                }

                $.ajax({
                    type: 'POST',
                    url: '/tailorChalansend/Edit',
                    data: JSON.stringify(data),
                    contentType: 'application/json',
                    success: function (data) {
                        if (data != "0") {
                            alert('Printer Chalan Updated Successfully.');
                            window.location.href = '/TailorChalanSend/Details/' + data;
                        }
                        else {
                            //$(this).val('Save Printer Chalan');
                            alert('Error in saving printer chalan');
                        }
                    },
                    error: function (error) {
                        console.log(error);
                    }
                });
            });

            //remove button click event
            $('#tailorChalanItems').on('click', '.remove', function () {
                if($('.Id', $(this).parents('tr')).val() != undefined && $('.Id', $(this).parents('tr')).val() != "")
                {
                    if(confirm('Are you sure you wish to delete this product.'))
                    {
                        $.ajax({
                            type: 'Get',
                            url: '/TailorChalanSend/DeleteProduct/' + $('.Id', $(this).parents('tr')).val(),
                            contentType: 'application/json',
                            success: function (data) {
                                if (data == "product deleted Successfully.") {
                                    $(this).parents('tr').remove();
                                }
                                else {
                                    alert('Error in deleting product.');
                                }
                            },
                            error: function (error) {
                                console.log(error);
                            }
                        });
                    }
                }
                else
                {
                    $(this).parents('tr').remove();
                }
            });
        });
</script>
}





