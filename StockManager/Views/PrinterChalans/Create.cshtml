@model StockManager.Models.PrinterChalan

@{
    ViewBag.Title = "Create New Printer Chalan";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm())
{
    <div class="form-horizontal">
        <h4>Printer Chalan</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="container">
            <div class="row">
                <div class="col-md-6 col-xs-12">
                    <div class="form-group">
                        @Html.Label("Vendor", "Vendor", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-8">
                            @Html.DropDownList("VendorId", null, htmlAttributes: new { @class = "form-control col-md-7", @id = "Vendor" })
                            @Html.ValidationMessageFor(model => model.VendorId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6 col-xs-12">
                    <div class="form-group">
                        @Html.Label("Chalan Date", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-8">
                            <div class="controls input-append date form_date" data-date="" data-date-format="dd MM yyyy" data-link-field="dtp_input1">
                                @Html.EditorFor(model => model.ChalanDate, new { htmlAttributes = new { @class = "form-control", @id = "ChalanDate" } })
                                <span class="add-on"><i class="icon-remove"></i></span>
                                <span class="add-on"><i class="icon-th"></i></span>
                            </div>
                            <input type="hidden" id="dtp_input1" value="" /><br />
                            @Html.ValidationMessageFor(model => model.ChalanDate, "", new { @class = "text-danger ChalanDateVal" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6 col-xs-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.chalan_number, "Chalan Number", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.chalan_number, new { htmlAttributes = new { @class = "form-control", @id = "ChalanNo" } })
                            @Html.ValidationMessageFor(model => model.chalan_number, "", new { @class = "text-danger ChalanNoVal" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6 col-xs-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.dispatched_through, "Dispatch Through", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.dispatched_through, new { htmlAttributes = new { @class = "form-control", @id = "DispatchThrough" } })
                            @Html.ValidationMessageFor(model => model.dispatched_through, "", new { @class = "text-danger DispatchThroughVal" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6 col-xs-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.dispatch_document_number, "Destination", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.dispatch_document_number, new { htmlAttributes = new { @class = "form-control", @id = "DocumentNo" } })
                            @Html.ValidationMessageFor(model => model.dispatch_document_number, "", new { @class = "text-danger DocumentNoVal" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6 col-xs-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.bale_numbers, "Bale Nos", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.bale_numbers, new { htmlAttributes = new { @class = "form-control", @id = "BaleNo" } })
                            @Html.ValidationMessageFor(model => model.bale_numbers, "", new { @class = "text-danger BaleNoVal" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6 col-xs-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, "Description", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", @id = "Description" } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger InvoiceNoVal" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div id="div1" class="col-md-6 col-xs-12 mt">
                    <div class="form-group">
                        <div class="col-md-2">
                        </div>
                        <div class="col-xs-12 col-md-8">
                            <input id="btnShowModal" type="button" value="Add Product" class="btn btn-success" />
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12 col-xs-12">
                    <div class="form-group">
                        <table class="table table-striped table-advance table-hover" id="printerChalanItems">
                            <tr id="productItemRow">
                                <td>
                                    <label class="productName">Product Name</label>
                                    <input type="hidden" class="productId" value="" />
                                </td>
                                <td>
                                    <label class="productQuantity">Quantity</label>
                                </td>
                                <td>
                                    <label class="productFold">Fold</label>
                                </td>
                                @if (ViewBag.GivenToPrinter == 1)
                                {
                                    <td>
                                        <label class="expectedFold">Expected Fold</label>
                                    </td>
                                    <td>
                                        <label class="shrinkage">Shrinkage</label>
                                    </td>
                                    <td>
                                        <label class="netQuantity">Net Quantity</label>
                                    </td>
                                }
                                <td class="itemEditRow"></td>
                            </tr>
                        </table>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-6 col-xs-12">
                    <div class="form-group">
                        <div class="col-md-2">
                        </div>
                        <div class="col-xs-12 col-md-8">
                            <input type="button" id="btnSubmit" class="btn btn-success" value="Save Printer Chalan" />
                            @Html.ActionLink("Close", "Index", "PrinterChalans", new { @class = "btn btn-danger" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="modal fade" tabindex="-1" id="itemModel"
                 data-keyboard="false" data-backdrop="static">
                <div class="modal-dialog modal-lg">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal">
                                ×
                            </button>
                            <h4 class="modal-title">Add Product</h4>
                        </div>
                        <div class="modal-body">
                            <form>
                                <div class="form-group">
                                    @Html.Label("Product", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownList("ProductId", null, htmlAttributes: new { @class = "form-control", @id = "product" })
                                        @Html.ValidationMessage("ProductIdVal", "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.Label("Quantity", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.Editor("Quantity", new { htmlAttributes = new { @class = "form-control", @id = "quantity" } })
                                        @Html.ValidationMessage("QuantityVal", "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.Label("Fold", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.Editor("Fold", new { htmlAttributes = new { @class = "form-control", @id = "fold" } })
                                        @Html.ValidationMessage("FoldVal", "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                @if (ViewBag.GivenToPrinter == 1)
                                {
                                    <div class="form-group">
                                        @Html.Label("Expected Fold", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.Editor("Expected Fold", new { htmlAttributes = new { @class = "form-control", @id = "expectedFold" } })
                                            @Html.ValidationMessage("ExpectedFoldVal", "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.Label("Shrinkage", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.Editor("Shrinkage", new { htmlAttributes = new { @class = "form-control", @id = "shrinkage" } })
                                            @Html.ValidationMessage("ShrinkageVal", "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.Label("Net Quantity", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.Editor("Net Quantity", new { htmlAttributes = new { @class = "form-control", @id = "netQuantity" } })
                                            @Html.ValidationMessage("NetQuantityVal", "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                }
                            </form>
                        </div>
                        <div class="modal-footer">
                            <button id="addProductItem" type="button" class="btn btn-success">Add Product</button>
                            <button type="button" id="btnHideModal" class="btn btn-danger">
                                Close
                            </button>
                        </div>
                    </div>
                </div>
            </div>


        </div>
    </div>
}

@section scripts
{
    <script type="text/javascript">
        $(document).ready(function () {
            $("#btnShowModal").click(function () {
                $("#itemModel").modal('show');
            });

            $("#btnHideModal").click(function () {
                $("#itemModel").modal('hide');
            });

            $("#btnHideModal").click(function () {

            });

            $('#addProductItem').click(function () {
                //validation and add order items
                var isAllValid = validateModel();

                if (isAllValid) {
                    var $newRow = $('#productItemRow').clone().removeAttr('id');

                    $('.productId', $newRow).val($('#product').val());
                    $('.productName', $newRow).text($('#product').text());
                    $('.productQuantity', $newRow).text($('#quantity').val());
                    $('.productFold', $newRow).text($('#fold').val());
                    $('.expectedFold', $newRow).text($('#expectedFold').val());
                    $('.netQuantity', $newRow).text($('#netQuantity').val());
                    $('.shrinkage', $newRow).text($('#shrinkage').val());
                    //$('.itemEditRow', $newRow).append('<a class="btn btn-success btn-xs" href="" title="Edit"><i class="fa fa-pencil"></i></a>|<a class="btn btn-danger btn-xs" href="" title="Delet>"><i class="fa fa-trash-o"></i></a>');
                    $('.itemEditRow', $newRow).append('<button type="button" class="btn btn-danger btn-xs remove" title="Delete" ><i class="fa fa-trash-o"></i></button>');
                    $('#printerChalanItems').append($newRow);
                    $('#quantity').val('');
                    $('#fold').val('');
                    $('#expectedFold').val('');
                    $('#netQuantity').val('');
                    $('#shrinkage').val('');
                    $("#itemModel").modal('hide');
                }
            });

            //remove button click event
            $('#printerChalanItems').on('click', '.remove', function () {
                $(this).parents('tr').remove();
            });

            $('#btnSubmit').click(function () {
                var isAllValid = validateMainPage();
                if (isAllValid) {
                    var list = [];
                    var errorItemCount = 0;
                    $('#printerChalanItems tbody tr').each(function (index, ele) {

                        if ($('.productId', this).val() != null && $('.productId', this).val() != "0" && $('.productId', this).val() != "") {
                            var orderItem = {
                                ProductId: $('.productId', this).val(),
                                Quantity: $('.productQuantity', this).text(),
                                Fold: $('.productFold', this).text(),
                                ExpectedFold: ((@Html.Raw(ViewBag.GivenToPrinter) == 1) ? $('.expectedFold', this).text() : 0),
                                NetQuantity:((@Html.Raw(ViewBag.GivenToPrinter) == 1) ? $('.netQuantity', this).text() : 0),
                                Shrinkage: ((@Html.Raw(ViewBag.GivenToPrinter) == 1) ? $('.shrinkage', this).text() : 0)
                            }
                            list.push(orderItem);
                        }
                    }
                        )

                    var data = {
                        VendorId: $('#Vendor').val(),
                        ChalanDate: $('#ChalanDate').val(),
                        IsGivenToPrinting: @Html.Raw(ViewBag.GivenToPrinter),
                        dispatch_document_number: $('#DocumentNo').val(),
                        dispatched_through: $('#DispatchThrough').val(),
                        bale_numbers: $('#BaleNo').val(),
                        Description: $('#Description').val(),
                        chalan_number: $('#ChalanNo').val(),
                        PrinterChalanDetails: list
                    }

                    //$(this).val('Please wait...');

                    $.ajax({
                        type: 'POST',
                        url: '/PrinterChalans/Create',
                        data: JSON.stringify(data),
                        contentType: 'application/json',
                        success: function (data) {
                            if (data != "0") {
                                alert('Printer Chalan Saved Successfully.');
                                list = [];
                                $('#Vender,#InvoiceDate').val('');
                                $('#printerChalanItems tbody tr').each(function (index, ele) {
                                    if ($('.productId', this).val() != null && $('.productId', this).val() != "0" && $('.productId', this).val() != "") {
                                        $('#printerChalanItems tbody tr', this).remove();
                                    }
                                });
                                //$(this).val('Save Purchase Order');
                                window.location.href = '/PrinterChalans/Details/' + data;
                            }
                            else {
                                //$(this).val('Save Printer Chalan');
                                alert('Error in saving printer chalan');
                            }
                        },
                        error: function (error) {
                            console.log(error);
                        }
                    });
                }
            });

            // validation scripts
            function validateModel() {
                var result = true;
                if ($('#quantity').val() == "") {
                    $('#quantity').siblings('span.QuantityVal').text("Please Enter Quantity.");
                    result = false;
                }
                if (isNaN($('#quantity').val())) {
                    $('#quantity').siblings('span.QuantityVal').text("Please Enter number in quantity.");
                    result = false;
                }
                if ($('#fold').val() == "") {
                    $('#fold').siblings('span.FoldVal').text("Please Enter Fold value.");
                    result = false;
                }
                if (isNaN($('#fold').val())) {
                    $('#fold').siblings('span.FoldVal').text("Please Enter number in Fold.");
                    result = false;
                }                
                return result;
            }

            $('#quantity').change(function () {
                if ($('#quantity').val() != "" && !isNaN($('#quantity').val())) {
                    $('#quantity').siblings('span.QuantityVal').text("");
                }
            });
            $('#fold').change(function () {
                if ($('#fold').val() != "" && !isNaN($('#fold').val())) {
                    $('#fold').siblings('span.FoldVal').text("");
                }
            });           

            function validateMainPage() {
                var result = true;
                if ($('#ChalanNo').val() == "") {
                    $('#ChalanNo').siblings('span.ChalanNoVal').text("Please Enter Fold Chalan Number.");
                    result = false;
                }
                if (isNaN($('#ChalanNo').val())) {
                    $('#ChalanNo').siblings('span.ChalanNoVal').text("Please Enter number in Chalan Number.");
                    result = false;
                }
                if ($('#ChalanDate').val() == "") {
                    $('#ChalanDate').siblings('span.ChalanDateVal').text("Please Enter Chalan Date value.");
                    result = false;
                }
                //if ($('#DocumentNo').val() == "") {
                //    $('#DocumentNo').siblings('span.DocumentNoVal').text("Please Enter Dispatch Document Number.");
                //    result = false;
                //}
                //if ($('#DispatchThrough').val() == "") {
                //    $('#DispatchThrough').siblings('span.DispatchThroughVal').text("Please Enter Dispatch Through details.");
                //    result = false;
                //}
                //if ($('#Destination').val() == "") {
                //    $('#Destination').siblings('span.DestinationVal').text("Please Enter Destination.");
                //    result = false;
                //}
                //if ($('#BaleNo').val() == "") {
                //    $('#BaleNo').siblings('span.BaleNoVal').text("Please Enter bale number.");
                //    result = false;
                //}
                return result;
            }

            $('#ChalanNo').change(function () {
                if ($('#ChalanNo').val() != "" && !isNaN($('#ChalanNo'))) {
                    $('#ChalanNo').siblings('span.ChalanNoVal').text("");
                }
            });
            $('#ChalanDate').change(function () {
                if ($('#ChalanDate').val() != "") {
                    $('#ChalanDate').siblings('span.ChalanDateVal').text("");
                }
            });

        });
    </script>
}



